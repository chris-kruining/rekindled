name: Release

on:
  push:
    branches:
      - "main"

concurrency:
  group: ${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: Install packages
        run: npm ci

      - name: Build code
        run: npm run build

      - name: Store project in cache
        uses: actions/cache@v3
        id: restore-build
        with:
          path: './*'
          key: ${{ github.sha }}

  test:
    name: Test
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node_version: [ 16.x ]
        protoc_version: [ 3.x ]
    steps:
      - name: Load project from cache
        uses: actions/cache@v3
        id: restore-build
        with:
          path: './*'
          key: ${{ github.sha }}

      - name: Run tests
        run: npm test

  publish:
    name: Publish
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Load project from cache
        uses: actions/cache@v3
        id: restore-build
        with:
          path: './*'
          key: ${{ github.sha }}

      - name: Debug
        run: ls -Ral

      - name: Create version number
        id: version
        uses: codacy/git-version@2.8.0
        with:
          release-branch: main

      - name: Update package.json
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "Github actions"
          npm version ${{ steps.version.outputs.version }}

      - name: Publish code to NPM
        run: npm publish --access=public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Zip project
        run: zip -r release.zip .

      - name: Create Github release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/gzip
